name: daily-odds

on:
  schedule:
    - cron: "*/30 6-22 * * *"    # ทุก 30 นาที ช่วงก่อนแข่ง (UTC)
  workflow_dispatch:

# โฟลเดอร์งานคือโปรเจกต์ API-Football-auto
defaults:
  run:
    working-directory: winscoreai-auto-github/API-Football-auto

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }

      - name: Install dependencies
        run: pip install -r requirements.txt

      # 1) ดึง odds วันนี้+พรุ่งนี้ (UTC)
      - name: Pull odds JSON/CSV (with allowlist)
        env:
          API_FOOTBALL_KEY: ${{ secrets.API_FOOTBALL_KEY }}
          API_FOOTBALL_VENDOR: ${{ secrets.API_FOOTBALL_VENDOR }}
        run: |
          echo "== pull odds (today+tomorrow, UTC) =="
          python scripts/af_today_odds.py \
            --days 2 \
            --allow allowlist_ALL.txt \
            --outdir live_odds
          echo "== list live_odds =="
          ls -lah live_odds || true

      # 2) ตรวจนับ fixtures จากไฟล์ล่าสุด
      - name: Find latest JSON & count fixtures
        id: fx
        shell: bash
        run: |
          LATEST_JSON="$(ls -1t live_odds/odds_full_*.json 2>/dev/null | head -n1 || true)"
          echo "LATEST_JSON=${LATEST_JSON}" >> "$GITHUB_OUTPUT"
          if [[ -n "$LATEST_JSON" && -f "$LATEST_JSON" ]]; then
            python - << 'PY'
import json, os
p=os.environ.get('LATEST_JSON','')
n=0
if p and os.path.exists(p):
    data=json.load(open(p,encoding='utf-8'))
    n=len(data.get('fixtures',[]))
print(f"fixtures_count={n}")
open(os.environ['GITHUB_OUTPUT'],'a').write(f"fixtures={n}\n")
PY
          else
            echo "fixtures=0" >> "$GITHUB_OUTPUT"
          fi

      # 3) ถ้า fixtures=0 ให้ fallback: รันซ้ำโดย 'ไม่ใช้ allowlist'
      - name: Fallback run (NO allowlist)
        if: ${{ steps.fx.outputs.fixtures == '0' }}
        env:
          API_FOOTBALL_KEY: ${{ secrets.API_FOOTBALL_KEY }}
          API_FOOTBALL_VENDOR: ${{ secrets.API_FOOTBALL_VENDOR }}
        run: |
          echo "== fallback: run without allowlist =="
          python scripts/af_today_odds.py \
            --days 2 \
            --outdir live_odds
          ls -lah live_odds || true
          # นับใหม่หลัง fallback
          LATEST_JSON="$(ls -1t live_odds/odds_full_*.json 2>/dev/null | head -n1 || true)"
          echo "LATEST_JSON=${LATEST_JSON}" >> "$GITHUB_OUTPUT"
          python - << 'PY'
import json, os
p=os.environ.get('LATEST_JSON','')
n=0
if p and os.path.exists(p):
    data=json.load(open(p,encoding='utf-8'))
    n=len(data.get('fixtures',[]))
print(f"fixtures_count={n}")
open(os.environ['GITHUB_OUTPUT'],'a').write(f"fixtures={n}\n")
PY

      # 4) อัปโหลดไฟล์เป็น artifacts (ช่วยตรวจย้อนหลัง)
      - name: Upload JSON artifact
        uses: actions/upload-artifact@v4
        with:
          name: odds-json
          path: live_odds/odds_full_*.json
          if-no-files-found: warn

      - name: Upload CSV artifact
        uses: actions/upload-artifact@v4
        with:
          name: odds-csv
          path: live_odds/odds_flat_all_*.csv
          if-no-files-found: warn

      # 5) Patch เข้า Firebase เฉพาะเมื่อมี fixtures > 0
      - name: Patch odds → Firebase
        if: ${{ steps.fx.outputs.fixtures != '0' }}
        env:
          FIREBASE_CREDENTIALS: ${{ secrets.FIREBASE_CREDENTIALS }}
          FIREBASE_DATABASE_URL: ${{ secrets.FIREBASE_DATABASE_URL }}
        run: |
          LATEST=$(ls -1t live_odds/odds_full_*.json | head -n1)
          echo "patching $LATEST"
          python scripts/patch_odds.py --json "$LATEST"
