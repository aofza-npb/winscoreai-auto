name: daily-odds

on:
  workflow_dispatch:
  schedule:
    - cron: "*/30 6-22 * * *"   # รันทุก 30 นาทีช่วงก่อนแข่ง (UTC)

defaults:
  run:
    working-directory: winscoreai-auto-github/API-Football-auto

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install -r requirements.txt

      # 1) ดึง odds ครอบคลุมวันนี้ (UTC) + พรุ่งนี้ กัน timezone พลาด
      - name: Pull odds JSON
        env:
          API_FOOTBALL_KEY: ${{ secrets.API_FOOTBALL_KEY }}
          API_FOOTBALL_VENDOR: ${{ secrets.API_FOOTBALL_VENDOR }}
        run: |
          python scripts/af_today_odds.py \
            --days 2 \
            --allow allowlist_ALL.txt \
            --outdir live_odds

      # 2) DEBUG: ลิสต์ไฟล์ + หาไฟล์ล่าสุด + นับ fixtures โดยไม่ใช้ heredoc
      - name: Debug list live_odds
        shell: bash
        run: |
          echo "---- live_odds/ ----"
          ls -lah live_odds || true

          LATEST_JSON="$(ls -1t live_odds/odds_full_*.json 2>/dev/null | head -n1 || true)"
          echo "LATEST_JSON=${LATEST_JSON}"
          echo "LATEST_JSON=${LATEST_JSON}" >> "$GITHUB_ENV"

          if [[ -n "${LATEST_JSON}" && -f "${LATEST_JSON}" ]]; then
            echo "---- preview first 2000 chars ----"
            head -c 2000 "${LATEST_JSON}" || true
            FIX="$(python -c "import os,json; p=os.environ.get('LATEST_JSON',''); n=0; \
            d=json.load(open(p,'r',encoding='utf-8')) if p else {'fixtures':[]}; \
            print(len(d.get('fixtures',[])))")"
          else
            FIX=0
          fi

          echo "fixtures_count=${FIX}"
          echo "FIXTURES_COUNT=${FIX}" >> "$GITHUB_ENV"

          # กันเคสไม่มีไฟล์ — สร้างไฟล์เปล่าไว้ให้ step ต่อไปไม่ล่ม
          if [[ -z "${LATEST_JSON}" ]]; then
            mkdir -p live_odds
            echo '{"fixtures":[],"meta":{"note":"no fixtures this window"}}' > live_odds/odds_full_EMPTY.json
            echo "LATEST_JSON=live_odds/odds_full_EMPTY.json" >> "$GITHUB_ENV"
          fi

      # 3) PATCH เข้า Firebase เฉพาะเมื่อมี fixtures > 0
      - name: Patch odds → Firebase
        if: ${{ fromJSON(env.FIXTURES_COUNT || '0') > 0 }}
        env:
          FIREBASE_CREDENTIALS: ${{ secrets.FIREBASE_CREDENTIALS }}
          FIREBASE_DATABASE_URL: ${{ secrets.FIREBASE_DATABASE_URL }}
        run: |
          echo "patching ${LATEST_JSON}"
          python scripts/patch_odds.py --json "${LATEST_JSON}"

      # (ทางเลือก) เก็บ JSON/CSV เป็น artifacts ไว้ตรวจย้อนหลัง
      - name: Upload JSON artifact
        uses: actions/upload-artifact@v4
        with:
          name: odds-json
          path: live_odds/odds_full_*.json
          if-no-files-found: warn

      - name: Upload CSV artifact
        uses: actions/upload-artifact@v4
        with:
          name: odds-csv
          path: live_odds/odds_flat_all_*.csv
          if-no-files-found: warn
