name: daily-odds

on:
  workflow_dispatch:
  schedule:
    # รันทุก 30 นาที ช่วงก่อนแข่ง (UTC) — ปรับได้ตามต้องการ
    - cron: "*/30 6-22 * * *"

# ชี้โฟลเดอร์ทำงานไปที่โปรเจ็กต์ API-Football-auto
defaults:
  run:
    working-directory: winscoreai-auto-github/API-Football-auto

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install -r requirements.txt

      # 1) ดึง odds: ครอบคลุม "วันนี้ (UTC)+พรุ่งนี้" เพื่อกัน timezone พลาด
      - name: Pull odds JSON
        env:
          API_FOOTBALL_KEY: ${{ secrets.API_FOOTBALL_KEY }}
          API_FOOTBALL_VENDOR: ${{ secrets.API_FOOTBALL_VENDOR }}
        run: |
          python scripts/af_today_odds.py \
            --days 2 \
            --allow allowlist_ALL.txt \
            --outdir live_odds

      # 2) DEBUG: ลิสต์ไฟล์, ดูชื่อไฟล์ล่าสุด และนับ fixtures ในไฟล์
      - name: Debug list live_odds
        id: dbg
        shell: bash
        run: |
          echo "---- live_odds/ ----"
          ls -lah live_odds || true

          LATEST_JSON="$(ls -1t live_odds/odds_full_*.json 2>/dev/null | head -n1 || true)"
          echo "LATEST_JSON=${LATEST_JSON}"
          echo "LATEST_JSON=${LATEST_JSON}" >> $GITHUB_ENV

          if [[ -n "${LATEST_JSON}" && -f "${LATEST_JSON}" ]]; then
            echo "---- preview first 2000 chars ----"
            head -c 2000 "${LATEST_JSON}" || true

            FIX=$(python - << 'PY'
import json, os
p = os.environ.get("LATEST_JSON")
try:
    with open(p, "r", encoding="utf-8") as f:
        d = json.load(f)
    print(len(d.get("fixtures", [])))
except Exception:
    print(0)
PY
)
          else
            FIX=0
          fi

          echo "fixtures_count=${FIX}"
          echo "FIXTURES_COUNT=${FIX}" >> $GITHUB_ENV

          # กันเคสไม่มีไฟล์ — สร้างไฟล์เปล่าให้ step ต่อไปไม่ล่ม (แต่จะไม่ patch)
          if [[ -z "${LATEST_JSON}" ]]; then
            mkdir -p live_odds
            echo '{"fixtures":[],"meta":{"note":"no fixtures this window"}}' > live_odds/odds_full_EMPTY.json
            echo "LATEST_JSON=live_odds/odds_full_EMPTY.json" >> $GITHUB_ENV
          fi

      # 3) PATCH เข้า Firebase เฉพาะเมื่อมี fixtures > 0
      - name: Patch odds → Firebase
        if: ${{ env.FIXTURES_COUNT > 0 }}
        env:
          FIREBASE_CREDENTIALS: ${{ secrets.FIREBASE_CREDENTIALS }}
          FIREBASE_DATABASE_URL: ${{ secrets.FIREBASE_DATABASE_URL }}
        run: |
          echo "patching ${LATEST_JSON}"
          python scripts/patch_odds.py --json "${LATEST_JSON}"

      # (ทางเลือก) อัปโหลดไฟล์ที่ได้ไว้เป็น artifacts เอาไว้ตรวจย้อนหลัง
      - name: Upload JSON artifact
        uses: actions/upload-artifact@v4
        with:
          name: odds-json
          path: live_odds/odds_full_*.json
          if-no-files-found: warn

      - name: Upload CSV artifact
        uses: actions/upload-artifact@v4
        with:
          name: odds-csv
          path: live_odds/odds_flat_all_*.csv
          if-no-files-found: warn
