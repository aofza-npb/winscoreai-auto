on:
  schedule:
    - cron: "*/30 6-22 * * *"    # ทุก 30 นาที ช่วงก่อนแข่ง (UTC)
  workflow_dispatch:

defaults:
  run:
    working-directory: winscoreai-auto-github/API-Football-auto

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install -r requirements.txt

      # --- Debug secrets (ไม่โชว์ key, โชว์ความยาวแทน) ---
      - name: Debug secrets (mask)
        run: |
          echo "Vendor: $API_FOOTBALL_VENDOR"
          echo "Key length: ${#API_FOOTBALL_KEY}"
        shell: bash
        env:
          API_FOOTBALL_KEY: ${{ secrets.API_FOOTBALL_KEY }}
          API_FOOTBALL_VENDOR: ${{ secrets.API_FOOTBALL_VENDOR }}

            # 1) ดึง odds วันนี้/พรุ่งนี้ (UTC หรือแล้วแต่ที่คุณตั้ง)
      - name: Pull odds JSON/CSV (tomorrow UTC)
        env:
          API_FOOTBALL_KEY: ${{ secrets.API_FOOTBALL_KEY }}
          API_FOOTBALL_VENDOR: ${{ secrets.API_FOOTBALL_VENDOR }}
        run: |
          TARGET_DATE="$(date -u -d '+1 day' +%Y-%m-%d)"
          echo "target date (UTC): $TARGET_DATE"
          python scripts/af_today_odds.py \
            --date "$TARGET_DATE" \
            --days 1 \
            --allow allowlist_ALL.txt \
            --outdir live_odds

      # 2) หาว่าไฟล์ JSON ล่าสุดคือไฟล์ไหน และนับ fixtures
      - name: Find latest JSON & count fixtures
        id: fx
        run: |
          LATEST_JSON="$(ls -1t live_odds/odds_full_*.json 2>/dev/null | head -n1 || true)"
          echo "LATEST_JSON=${LATEST_JSON}" >> "$GITHUB_ENV"

          python - <<'PY'
          import json, os, pathlib
          p = os.environ.get('LATEST_JSON','')
          n = 0
          if p and pathlib.Path(p).exists():
              with open(p, encoding='utf-8') as f:
                  d = json.load(f)
                  n = len(d.get('fixtures', []))
          print(f"fixtures_count={n}")
          with open(os.environ['GITHUB_OUTPUT'], 'a', encoding='utf-8') as g:
              g.write(f"fixtures={n}\n")
          PY

      # (ช่วย debug) แสดงหัวไฟล์ JSON
      - name: Debug fixtures preview
        run: |
          head -n 200 live_odds/odds_full_*.json || true

      # 3) อัปโหลดไฟล์เป็น artifacts (ช่วยตรวจย้อนหลัง)
      - name: Upload JSON artifact
        uses: actions/upload-artifact@v4
        with:
          name: odds-json
          path: ./live_odds/odds_full_*.json
          if-no-files-found: ignore   # จากเดิม warn → ignore

      - name: Upload CSV artifact
        uses: actions/upload-artifact@v4
        with:
          name: odds-csv
          path: ./live_odds/odds_flat_all_*.csv
          if-no-files-found: ignore


      # 4) Patch เข้า Firebase เฉพาะเมื่อ fixtures > 0
      - name: Patch odds → Firebase
        if: ${{ steps.fx.outputs.fixtures != '0' }}
        env:
          FIREBASE_CREDENTIALS: ${{ secrets.FIREBASE_CREDENTIALS }}
          FIREBASE_DATABASE_URL: ${{ secrets.FIREBASE_DATABASE_URL }}
        run: |
          LATEST=$(ls -1t live_odds/odds_full_*.json | head -n1)
          echo "patching $LATEST"
          python scripts/patch_odds.py --json "$LATEST"

